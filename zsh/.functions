# use smarter clone script
# clone will copy the new repo url,
# we just need to paste it afterwards
function clone() {
  node ~/dotfiles/scripts/clone.js $1 && cd $(pbpaste)
}

function publish_current_branch() {
  git push --set-upstream origin $(git_current_branch):$(git_current_branch)
}

function delete_local_merged_branches() {
  git branch --merged | egrep -v "(^\*)" | xargs git branch -d
}

function delete_remote_merged_branches() {
  git fetch origin
  git remote prune origin
  git branch -r --merged origin/master | awk -F'/' '/^ *origin/{if(!match($0, /(>|master)/)){print $2}}' | xargs git push origin --delete
}

# tree
function t() {
  tree -I '.git|node_modules|bower_components|.DS_Store' --dirsfirst --filelimit 30 -L ${1:-3} -aC $2
}

# generate a bitly url and copy to clipboard
function bitly() {
  printf '\n'
  echo -n $(python ~/dotfiles/scripts/bitly.py $1) | tee >(pbcopy)
  printf " $(tput setaf 2)[copied to clipboard]\n\n"
}

# get current IP address
function getip() {
  node ~/dotfiles/scripts/getIp.js
}

# open current repo online if it's a git repo
function open_git_repo_online() {
  node  ~/dotfiles/scripts/openGitRepo.js
}

# run node-prune in all directories within the current dir
function prune() {
  sh ~/dotfiles/scripts/prune.sh
}

# kill process running on specified port
function killport() {
  lsof -i TCP:$1 | grep LISTEN | awk '{print $2}' | xargs kill -9
}

# empty the trash
function dump() {
  node ~/dotfiles/scripts/emptyTrash.js
}

function colors() {
  echo -e "\033[0mCOLOR_NC (No color)"
  echo -e "\033[1;37mCOLOR_WHITE\t\033[0;30mCOLOR_BLACK"
  echo -e "\033[0;34mCOLOR_BLUE\t\033[1;34mCOLOR_LIGHT_BLUE"
  echo -e "\033[0;32mCOLOR_GREEN\t\033[1;32mCOLOR_LIGHT_GREEN"
  echo -e "\033[0;36mCOLOR_CYAN\t\033[1;36mCOLOR_LIGHT_CYAN"
  echo -e "\033[0;31mCOLOR_RED\t\033[1;31mCOLOR_LIGHT_RED"
  echo -e "\033[0;35mCOLOR_PURPLE\t\033[1;35mCOLOR_LIGHT_PURPLE"
  echo -e "\033[0;33mCOLOR_YELLOW\t\033[1;33mCOLOR_LIGHT_YELLOW"
  echo -e "\033[1;30mCOLOR_GRAY\t\033[0;37mCOLOR_LIGHT_GRAY"
}
